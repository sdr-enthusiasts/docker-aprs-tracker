#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091

# GPSD watchdog module.
#---------------------------------------------------------------------------------------------
# Copyright (C) 2023, Ramon F. Kolb (kx1t)
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 2 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------

source /scripts/common
s6wrap=(s6wrap --quiet --timestamps --prepend="$(basename "$0")" --args)

# this module has a dependency on the gpsd module. It won't start until that module is running.

# wait until the device is known to the gpsd service:
while [[ ! -f /run/gpsd/current_device ]]; do sleep 1; done
read -r gps_dev < /run/gpsd/current_device
# sleep a bit to allow gpsd to establish itself
sleep 5

# determine the current port for the GPS device:
if chk_enabled "$GPSD_USBAUTO"; then
    # if the product name of the serial port device has gps or GPS in it, we can figure out the /dev device link for it:
    if [[ -n "$gps_dev" ]]; then
        "${s6wrap[@]}" echo "[INFO] GPSD_USBAUTO enabled: GPS device auto-detected on $gps_dev"
    else
        "${s6wrap[@]}" echo "[WARNING] GPSD_USBAUTO enabled but we couldn't find a device. Falling back to GPSD_DEVICES=$GPSD_DEVICES"
    fi
    GPSD_DEVICES="${gps_dev:-${GPSD_DEVICES}}"
fi

while [[ -e "$GPSD_DEVICES" ]]; do
    sleep 15
done
# sometimes it takes a few secs for the new device to become listed
sleep 5

gps_dev_new="$(find /dev/serial/by-id/ -iname "*gps*" -printf '%l\n' 2>/dev/null | awk -F/ '{print "/dev/" $NF}')"

"${s6wrap[@]}" echo "[WARNING] GPS device has changed ports! Old port: ${GPSD_DEVICES} New port: ${gps_dev_new:-unknown}"
"${s6wrap[@]}" echo "[WARNING] Restarting GPSD!"

# s6-svc -r /run/service/gpsd 2>/dev/null || true
pkill gpsd || true
rm -f /run/gpsd/current_device