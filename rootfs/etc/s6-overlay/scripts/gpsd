#!/command/with-contenv bash
# shellcheck shell=bash

# GPSD runtime module.
#---------------------------------------------------------------------------------------------
# Copyright (C) 2023, Ramon F. Kolb (kx1t)
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 2 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------

#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091,SC2015,SC2164,SC2068,SC2145

source /scripts/common
s6wrap=(s6wrap --quiet --timestamps --prepend="$(basename "$0")" --args)

GPSD_BIN="/sbin/gpsd"

GPSD_ARGS=(--nowait)
if chk_disabled "$GPSD_START_DAEMON"; then GPSD_ARGS+=(--foreground); fi
if chk_enabled "$VERBOSE"; then VERBOSE="1"; fi
if [[ -n "$VERBOSE" ]]; then GPSD_ARGS+=(--debug "$VERBOSE"); fi
if [[ -n "$GPSD_SOCKET" ]]; then GPSD_ARGS+=(--sockfile "$GPSD_SOCKET"); fi
if [[ -n "$GPSD_OPTIONS" ]]; then GPSD_ARGS+=("$GPSD_OPTIONS"); fi
if chk_enabled "$GPSD_USBAUTO"; then
    # if the product name of the serial port device has gps or GPS in it, we can figure out the /dev device link for it:
    gps_dev="$(find /dev/serial/by-id/ -iname "*gps*" -printf '%l\n' 2>/dev/null | awk -F/ '{print "/dev/" $NF}')"
    if [[ -n "$gps_dev" ]]; then
        "${s6wrap[@]}" echo "[INFO] GPSD_USBAUTO enabled: GPS device auto-detected on $gps_dev"
    else
        "${s6wrap[@]}" echo "[WARNING] GPSD_USBAUTO enabled but we couldn't find a device. Falling back to GPSD_DEVICES=$GPSD_DEVICES"
    fi
    GPSD_DEVICES="${gps_dev:-${GPSD_DEVICES}}"
fi
GPSD_ARGS+=("${GPSD_DEVICES}")

"${s6wrap[@]}" echo "[INFO] Starting: $GPSD_BIN ${GPSD_ARGS[@]}"
#shellcheck disable=SC2048,SC2086
"${s6wrap[@]}" $GPSD_BIN ${GPSD_ARGS[*]} \
    | grep -vi "Cannot assign requested address" \
    | grep -vi "unable to connect to the DBUS system bus" \
    || true

"${s6wrap[@]}" echo "[WARNING] Exited, restarting in 10 secs"
sleep 10