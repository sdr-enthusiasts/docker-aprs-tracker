#!/command/with-contenv bash
#shellcheck shell=bash disable=SC2015,SC1091,SC1090,SC2034

APPNAME="$(hostname)/70-set-strings"
#---------------------------------------------------------------------------------------------
# Copyright (C) 2022-2023, Ramon F. Kolb (kx1t)
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#---------------------------------------------------------------------------------------------

echo "[$(date)][$APPNAME] Loading Vessel and Status Descriptions"

[[ -z "${VESSELDBFILE}" ]] && VESSELDBFILE="/data/vessel.db" || true

touch ${VESSELDBFILE}
# First read the existing entries in from file
if (( $(wc -l < "$VESSELDBFILE") > 0 ))
then
    [[ -n "$DEBUG" ]] && echo reading databases from file || true
    source "$VESSELDBFILE"
fi

# Do not edit the lists below if you want to make changes. Edit /data/xxxx.db instead.
unset SHIPTYPE
declare -A SHIPTYPE

if [[ -f /data/shiptype.db ]]
then
    source "/data/shiptype.db"
    echo "[$(date)][$APPNAME] SHIPTYPE database loaded from file"
else
    #SHIPTYPE[0]="Not Available"
    #SHIPTYPE[1]="Reserved for future use"
    #SHIPTYPE[2]="Reserved for future use"
    #SHIPTYPE[3]="Reserved for future use"
    #SHIPTYPE[4]="Reserved for future use"
    #SHIPTYPE[5]="Reserved for future use"
    #SHIPTYPE[6]="Reserved for future use"
    #SHIPTYPE[7]="Reserved for future use"
    #SHIPTYPE[8]="Reserved for future use"
    #SHIPTYPE[9]="Reserved for future use"
    #SHIPTYPE[10]="Reserved for future use"
    #SHIPTYPE[11]="Reserved for future use"
    #SHIPTYPE[12]="Reserved for future use"
    #SHIPTYPE[13]="Reserved for future use"
    #SHIPTYPE[14]="Reserved for future use"
    #SHIPTYPE[15]="Reserved for future use"
    #SHIPTYPE[16]="Reserved for future use"
    #SHIPTYPE[17]="Reserved for future use"
    #SHIPTYPE[18]="Reserved for future use"
    #SHIPTYPE[19]="Reserved for future use"
    SHIPTYPE[20]="#WIG (Wing in ground)"
    SHIPTYPE[21]="#WIG #Hazard cat A"
    SHIPTYPE[22]="#WIG #Hazard cat B"
    SHIPTYPE[23]="#WIG #Hazard cat B"
    SHIPTYPE[24]="#WIG #Hazard cat D"
    SHIPTYPE[25]="#WIG"
    SHIPTYPE[26]="#WIG"
    SHIPTYPE[27]="#WIG"
    SHIPTYPE[28]="#WIG"
    SHIPTYPE[29]="#WIG"
    SHIPTYPE[30]="#Fishing"
    SHIPTYPE[31]="#Towing"
    SHIPTYPE[32]="#Towing (Large)"
    SHIPTYPE[33]="#Dredging"
    SHIPTYPE[34]="#Diving"
    SHIPTYPE[35]="#Military #Mil #Navy"
    SHIPTYPE[36]="#Sailing"
    SHIPTYPE[37]="#Pleasure Craft"
    #SHIPTYPE[38]="Reserved"
    #SHIPTYPE[39]="Reserved"
    SHIPTYPE[40]="#HiSpeed"
    SHIPTYPE[41]="#HiSpeed #Hazard cat A"
    SHIPTYPE[42]="#HiSpeed #Hazard cat B"
    SHIPTYPE[43]="#HiSpeed #Hazard cat C"
    SHIPTYPE[44]="#HiSpeed #Hazard cat D"
    #SHIPTYPE[45]="#HiSpeed Reserved"
    #SHIPTYPE[46]="#HiSpeed Reserved"
    #SHIPTYPE[47]="#HiSpeed Reserved"
    #SHIPTYPE[48]="#HiSpeed Reserved"
    SHIPTYPE[49]="#HiSpeed"
    SHIPTYPE[50]="#Pilot vessel"
    SHIPTYPE[51]="#SAR"
    SHIPTYPE[52]="#Tug"
    SHIPTYPE[53]="#Port_Tender"
    SHIPTYPE[54]="#Anti_Pollution"
    SHIPTYPE[55]="#Law #Enforcement"
    SHIPTYPE[56]="#Local"
    SHIPTYPE[57]="#Local"
    SHIPTYPE[58]="#Medical transport"
    SHIPTYPE[59]="#Non_Combatant #Mil #Navy"
    SHIPTYPE[60]="#Passenger"
    SHIPTYPE[61]="#Passenger  #Hazard cat A"
    SHIPTYPE[62]="#Passenger  #Hazard cat B"
    SHIPTYPE[63]="#Passenger  #Hazard cat C"
    SHIPTYPE[64]="#Passenger  #Hazard cat D"
    #SHIPTYPE[65]="#Passenger Reserved"
    #SHIPTYPE[66]="#Passenger Reserved"
    #SHIPTYPE[67]="#Passenger Reserved"
    #SHIPTYPE[68]="#Passenger Reserved"
    SHIPTYPE[69]="#Passenger"
    SHIPTYPE[70]="#Cargo"
    SHIPTYPE[71]="#Cargo #Hazard cat A"
    SHIPTYPE[72]="#Cargo #Hazard cat B"
    SHIPTYPE[73]="#Cargo #Hazard cat C"
    SHIPTYPE[74]="#Cargo #Hazard cat D"
    #SHIPTYPE[75]="#Cargo Reserved"
    #SHIPTYPE[76]="#Cargo Reserved"
    #SHIPTYPE[77]="#Cargo Reserved"
    #SHIPTYPE[78]="#Cargo Reserved"
    SHIPTYPE[79]="#Cargo"
    SHIPTYPE[80]="#Tanker"
    SHIPTYPE[81]="#Tanker #Hazard cat A"
    SHIPTYPE[82]="#Tanker #Hazard cat B"
    SHIPTYPE[83]="#Tanker #Hazard cat C"
    SHIPTYPE[84]="#Tanker #Hazard cat D"
    #SHIPTYPE[85]="#Tanker Reserved"
    #SHIPTYPE[86]="#Tanker Reserved"
    #SHIPTYPE[87]="#Tanker Reserved"
    #SHIPTYPE[88]="#Tanker Reserved"
    SHIPTYPE[89]="#Tanker"
    SHIPTYPE[90]="#Other"
    SHIPTYPE[91]="#Other #Hazard cat A"
    SHIPTYPE[92]="#Other #Hazard cat B"
    SHIPTYPE[93]="#Other #Hazard cat C"
    SHIPTYPE[94]="#Other #Hazard cat D"
    #SHIPTYPE[95]="#Other Reserved"
    #SHIPTYPE[96]="#Other Reserved"
    #SHIPTYPE[97]="#Other Reserved"
    #SHIPTYPE[98]="#Other Reserved"
    SHIPTYPE[99]="#Other"

    echo "[$(date)][$APPNAME] SHIPTYPE database loaded from internal list as shiptype.db file was not found"
fi
unset SHIPSTATUS
declare -A SHIPSTATUS
if [[ -f /data/shipstatus.db ]]
then
    source "/data/shipstatus.db"
    echo "[$(date)][$APPNAME] SHIPSTATUS database loaded from file"
else
    SHIPSTATUS[0]="#under_way_using_engine"
    SHIPSTATUS[1]="#anchored"
    SHIPSTATUS[2]="#not_under_command "
    SHIPSTATUS[3]="#restricted_maneuverability"
    SHIPSTATUS[4]="#draught_constrained"
    SHIPSTATUS[5]="#moored"
    SHIPSTATUS[6]="#aground "
    SHIPSTATUS[7]="#fishing"
    SHIPSTATUS[8]="#under_way_sailing #sailing"
    # SHIPSTATUS[9]="reserved for future amendment of navigational status for ships carrying DG, HS, or MP, or IMO hazard or pollutant category C, high-speed craft (HSC)"
    # SHIPSTATUS[10]="reserved for future amendment of navigational status for ships carrying dangerous goods (DG), harmful substances (HS) or marine pollutants (MP), or IMO hazard or pollutant category A, wing in ground (WIG)"
    SHIPSTATUS[11]="#tow_pulling"
    SHIPSTATUS[12]="#tow_pushing"
    #SHIPSTATUS[13]="reserved for future use"
    SHIPSTATUS[14]="#AIS-SART #MOB-AIS #EPIRB-AIS"
    #SHIPSTATUS[15]="undefined = default (also used by AIS-SART, MOB-AIS and EPIRB-AIS under test)"

    echo "[$(date)][$APPNAME] SHIPSTATUS database loaded from internal list as shipstatus.db file was not found"
fi

unset COUNTRY
declare -A COUNTRY
if [[ -f /data/country.db ]]
then
    source "/data/country.db"
    echo "[$(date)][$APPNAME] COUNTRY names database loaded from file"
else
    COUNTRY[AD]="Andorra"
    COUNTRY[AE]="UAE"
    COUNTRY[AF]="Afghanistan"
    COUNTRY[AG]="Antigua_Barbuda"
    COUNTRY[AI]="Anguilla"
    COUNTRY[AL]="Albania"
    COUNTRY[AM]="Armenia"
    COUNTRY[AO]="Angola"
    COUNTRY[AQ]="Antarctica"
    COUNTRY[AR]="Argentina"
    COUNTRY[AS]="American_Samoa"
    COUNTRY[AT]="Austria"
    COUNTRY[AU]="Australia"
    COUNTRY[AW]="Aruba"
    COUNTRY[AZ]="Azerbaijan"
    COUNTRY[BA]="Bosnia_and_Herzegovina"
    COUNTRY[BB]="Barbados"
    COUNTRY[BD]="Bangladesh"
    COUNTRY[BE]="Belgium"
    COUNTRY[BF]="Burkina_Faso"
    COUNTRY[BG]="Bulgaria"
    COUNTRY[BH]="Bahrain"
    COUNTRY[BI]="Burundi"
    COUNTRY[BJ]="Benin"
    COUNTRY[BM]="Bermuda"
    COUNTRY[BN]="Brunei"
    COUNTRY[BO]="Bolivia"
    COUNTRY[BR]="Brazil"
    COUNTRY[BS]="Bahamas"
    COUNTRY[BT]="Bhutan"
    COUNTRY[BW]="Botswana"
    COUNTRY[BY]="Belarus"
    COUNTRY[BZ]="Belize"
    COUNTRY[CA]="Canada"
    COUNTRY[CC]="Cocos_Island"
    COUNTRY[CD]="DR_Congo"
    COUNTRY[CF]="Cen_Afr_Rep"
    COUNTRY[CG]="Congo"
    COUNTRY[CH]="Switzerland"
    COUNTRY[CI]="Ivory_Coast"
    COUNTRY[CK]="Cook_Island"
    COUNTRY[CL]="Chile"
    COUNTRY[CM]="Cameroon"
    COUNTRY[CN]="China"
    COUNTRY[CO]="Colombia"
    COUNTRY[CR]="Costa_Rica"
    COUNTRY[CU]="Cuba"
    COUNTRY[CV]="Cape_Verde"
    COUNTRY[CW]="Curacao"
    COUNTRY[CX]="Christmas_Island"
    COUNTRY[CY]="Cyprus"
    COUNTRY[CZ]="Czech_Republic"
    COUNTRY[DE]="Germany"
    COUNTRY[DJ]="Djibouti"
    COUNTRY[DK]="Denmark"
    COUNTRY[DM]="Dominica"
    COUNTRY[DO]="Dominican_Republic"
    COUNTRY[DZ]="Algeria"
    COUNTRY[EC]="Ecuador"
    COUNTRY[EE]="Estonia"
    COUNTRY[EG]="Egypt"
    COUNTRY[ER]="Eritrea"
    COUNTRY[ES]="Spain"
    COUNTRY[ET]="Ethiopia"
    COUNTRY[FI]="Finland"
    COUNTRY[FJ]="Fiji"
    COUNTRY[FM]="Micronesia"
    COUNTRY[FO]="Faroe_Islands"
    COUNTRY[FR]="France"
    COUNTRY[GA]="Gabon"
    COUNTRY[GB]="United_Kingdom"
    COUNTRY[GD]="Grenada"
    COUNTRY[GE]="Georgia"
    COUNTRY[GF]="Guiana"
    COUNTRY[GH]="Ghana"
    COUNTRY[GI]="Gibraltar"
    COUNTRY[GL]="Greenland"
    COUNTRY[GM]="Gambia"
    COUNTRY[GN]="Guinea"
    COUNTRY[GP]="Guadeloupe"
    COUNTRY[GQ]="Equ._Guinea"
    COUNTRY[GR]="Greece"
    COUNTRY[GT]="Guatemala"
    COUNTRY[GW]="Guinea-Bissau"
    COUNTRY[GY]="Guyana"
    COUNTRY[HK]="Hong_Kong"
    COUNTRY[HN]="Honduras"
    COUNTRY[HR]="Croatia"
    COUNTRY[HT]="Haiti"
    COUNTRY[HU]="Hungary"
    COUNTRY[ID]="Indonesia"
    COUNTRY[IE]="Ireland"
    COUNTRY[IL]="Israel"
    COUNTRY[IN]="India"
    COUNTRY[IO]="Ascension_Island"
    COUNTRY[IQ]="Iraq"
    COUNTRY[IR]="Iran"
    COUNTRY[IS]="Iceland"
    COUNTRY[IT]="Italy"
    COUNTRY[JM]="Jamaica"
    COUNTRY[JO]="Jordan"
    COUNTRY[JP]="Japan"
    COUNTRY[KE]="Kenya"
    COUNTRY[KG]="Kyrgyz_Republic"
    COUNTRY[KH]="Cambodia"
    COUNTRY[KI]="Kiribati"
    COUNTRY[KM]="Comoros"
    COUNTRY[KN]="St_Kitts_Nevis"
    COUNTRY[KP]="DPR_Korea"
    COUNTRY[KR]="Korea"
    COUNTRY[KW]="Kuwait"
    COUNTRY[KY]="Cayman_Islands"
    COUNTRY[KZ]="Kazakhstan"
    COUNTRY[LA]="Laos"
    COUNTRY[LB]="Lebanon"
    COUNTRY[LC]="St_Lucia"
    COUNTRY[LI]="Liechtenstein"
    COUNTRY[LK]="Sri_Lanka"
    COUNTRY[LR]="Liberia"
    COUNTRY[LS]="Lesotho"
    COUNTRY[LT]="Lithuania"
    COUNTRY[LU]="Luxembourg"
    COUNTRY[LV]="Latvia"
    COUNTRY[LY]="Libya"
    COUNTRY[MA]="Morocco"
    COUNTRY[MC]="Monaco"
    COUNTRY[MD]="Moldova"
    COUNTRY[ME]="Montenegro"
    COUNTRY[MG]="Madagascar"
    COUNTRY[MH]="Marshall_Islands"
    COUNTRY[MK]="North_Macedonia"
    COUNTRY[ML]="Mali"
    COUNTRY[MM]="Myanmar"
    COUNTRY[MN]="Mongolia"
    COUNTRY[MO]="Macao"
    COUNTRY[MP]="N_Mariana_Island"
    COUNTRY[MQ]="Martinique"
    COUNTRY[MR]="Mauritania"
    COUNTRY[MS]="Montserrat"
    COUNTRY[MT]="Malta"
    COUNTRY[MU]="Mauritius"
    COUNTRY[MV]="Maldives"
    COUNTRY[MW]="Malawi"
    COUNTRY[MX]="Mexico"
    COUNTRY[MY]="Malaysia"
    COUNTRY[MZ]="Mozambique"
    COUNTRY[NA]="Namibia"
    COUNTRY[NC]="New_Caledonia"
    COUNTRY[NE]="Niger"
    COUNTRY[NG]="Nigeria"
    COUNTRY[NI]="Nicaragua"
    COUNTRY[NL]="Netherlands"
    COUNTRY[NO]="Norway"
    COUNTRY[NP]="Nepal"
    COUNTRY[NR]="Nauru"
    COUNTRY[NU]="Niue"
    COUNTRY[NZ]="New_Zealand"
    COUNTRY[OM]="Oman"
    COUNTRY[PA]="Panama"
    COUNTRY[PE]="Peru"
    COUNTRY[PF]="French_Polynesia"
    COUNTRY[PG]="Papua_New_Guinea"
    COUNTRY[PH]="Philippines"
    COUNTRY[PK]="Pakistan"
    COUNTRY[PL]="Poland"
    COUNTRY[PM]="St_Pierre_Miquelon"
    COUNTRY[PN]="Pitcairn_Island"
    COUNTRY[PR]="Puerto_Rico"
    COUNTRY[PS]="Palestine"
    COUNTRY[PT]="Portugal"
    COUNTRY[PW]="Palau"
    COUNTRY[PY]="Paraguay"
    COUNTRY[QA]="Qatar"
    COUNTRY[RE]="Reunion"
    COUNTRY[RO]="Romania"
    COUNTRY[RS]="Serbia"
    COUNTRY[RU]="Russia"
    COUNTRY[RW]="Rwanda"
    COUNTRY[SA]="Saudi_Arabia"
    COUNTRY[SB]="Solomon_Islands"
    COUNTRY[SC]="Seychelles"
    COUNTRY[SD]="Sudan"
    COUNTRY[SE]="Sweden"
    COUNTRY[SG]="Singapore"
    COUNTRY[SH]="St_Helena"
    COUNTRY[SI]="Slovenia"
    COUNTRY[SK]="Slovakia"
    COUNTRY[SL]="Sierra_Leone"
    COUNTRY[SM]="San_Marino"
    COUNTRY[SN]="Senegal"
    COUNTRY[SO]="Somalia"
    COUNTRY[SR]="Suriname"
    COUNTRY[ST]="Sao_Tome_Principe"
    COUNTRY[SV]="El_Salvador"
    COUNTRY[SY]="Syria"
    COUNTRY[SZ]="Swaziland"
    COUNTRY[TC]="Turks_Caicos_Islands"
    COUNTRY[TD]="Chad"
    COUNTRY[TF]="St_Paul_Amsterdam_Islands"
    COUNTRY[TG]="Togo"
    COUNTRY[TH]="Thailand"
    COUNTRY[TJ]="Tajikistan"
    COUNTRY[TM]="Turkmenistan"
    COUNTRY[TN]="Tunisia"
    COUNTRY[TO]="Tonga"
    COUNTRY[TR]="Turkey"
    COUNTRY[TT]="Trinidad_Tobago"
    COUNTRY[TV]="Tuvalu"
    COUNTRY[TW]="Taiwan"
    COUNTRY[TZ]="Tanzania"
    COUNTRY[UA]="Ukraine"
    COUNTRY[UG]="Uganda"
    COUNTRY[UK]="UK"
    COUNTRY[US]="USA"
    COUNTRY[UY]="Uruguay"
    COUNTRY[UZ]="Uzbekistan"
    COUNTRY[VA]="Vatican"
    COUNTRY[VC]="St_Vincent_Grenadines"
    COUNTRY[VE]="Venezuela"
    COUNTRY[VG]="British_Virgin_Islands"
    COUNTRY[VI]="US_Virgin_Islands"
    COUNTRY[VN]="Vietnam"
    COUNTRY[VU]="Vanuatu"
    COUNTRY[WF]="Wallis_Futuna_Islands"
    COUNTRY[WS]="Samoa"
    COUNTRY[YE]="Yemen"
    COUNTRY[ZA]="South_Africa"
    COUNTRY[ZM]="Zambia"
    COUNTRY[ZW]="Zimbabwe"

    echo "[$(date)][$APPNAME] COUNTRY names database loaded from internal list as country.db file was not found"
fi

# Make sure the other arrays have been declared if they don't already exist:
! declare -p VESSELS >/dev/null 2>&1 && declare -A VESSELS || true
! declare -p KEY_INDEX >/dev/null 2>&1 && declare -a KEY_INDEX || true
! declare -p VESSEL_INDEX >/dev/null 2>&1 && declare -a VESSEL_INDEX || true

# One-time conversion to new variables naming convention:
for vessel in "${VESSELS[@]}"
do
    if [[ "${VESSELS[${vessel}:mast:lat]+abc}" ]]
    then
        VESSELS[${vessel}:notification:lat]="${VESSELS[${vessel}:mast:lat]}"
        unset "VESSELS[${vessel}:mast:lat]"
    fi
    if [[ "${VESSELS[${vessel}:mast:lon]+abc}" ]]
    then
        VESSELS[${vessel}:notification:lon]="${VESSELS[${vessel}:mast:lon]}"
        unset "VESSELS[${vessel}:mast:lon]"
    fi
    if [[ "${VESSELS[${vessel}:mast:last]+abc}" ]]
    then
        VESSELS[${vessel}:notification:last]="${VESSELS[${vessel}:mast:last]}"
        unset "VESSELS[${vessel}:mast:last]"
    fi
done

# write back to file
source "/usr/share/vesselalert/save_databases"
